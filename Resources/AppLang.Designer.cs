//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RainbusToolbox.Resources {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppLang {
        
        private static System.Resources.ResourceManager resourceMan;
        
        private static System.Globalization.CultureInfo resourceCulture;
        
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppLang() {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static System.Resources.ResourceManager ResourceManager {
            get {
                if (object.Equals(null, resourceMan)) {
                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("RainbusToolbox.Resources.AppLang", typeof(AppLang).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
        
        internal static string ErrorTitle {
            get {
                return ResourceManager.GetString("ErrorTitle", resourceCulture);
            }
        }
        
        internal static string NoGithubLogin {
            get {
                return ResourceManager.GetString("NoGithubLogin", resourceCulture);
            }
        }
        
        internal static string NoReleaseVersionSpecified {
            get {
                return ResourceManager.GetString("NoReleaseVersionSpecified", resourceCulture);
            }
        }
        
        internal static string LocalizationManagerHyperlink {
            get {
                return ResourceManager.GetString("LocalizationManagerHyperlink", resourceCulture);
            }
        }
        
        internal static string SuccessTitle {
            get {
                return ResourceManager.GetString("SuccessTitle", resourceCulture);
            }
        }
        
        internal static string ReleaseCreationSuccess {
            get {
                return ResourceManager.GetString("ReleaseCreationSuccess", resourceCulture);
            }
        }
        
        internal static string PushingBranchProcess {
            get {
                return ResourceManager.GetString("PushingBranchProcess", resourceCulture);
            }
        }
        
        internal static string PushingBranchSuccess {
            get {
                return ResourceManager.GetString("PushingBranchSuccess", resourceCulture);
            }
        }
        
        internal static string GitUpToDate {
            get {
                return ResourceManager.GetString("GitUpToDate", resourceCulture);
            }
        }
        
        internal static string GitSyncSuccess {
            get {
                return ResourceManager.GetString("GitSyncSuccess", resourceCulture);
            }
        }
        
        internal static string GitNoLocalCommits {
            get {
                return ResourceManager.GetString("GitNoLocalCommits", resourceCulture);
            }
        }
        
        internal static string GitLocalUpToDate {
            get {
                return ResourceManager.GetString("GitLocalUpToDate", resourceCulture);
            }
        }
        
        internal static string GitLocalBehind {
            get {
                return ResourceManager.GetString("GitLocalBehind", resourceCulture);
            }
        }
        
        internal static string GitUpToDateAfterMerge {
            get {
                return ResourceManager.GetString("GitUpToDateAfterMerge", resourceCulture);
            }
        }
        
        internal static string GitMergeSuccess {
            get {
                return ResourceManager.GetString("GitMergeSuccess", resourceCulture);
            }
        }
        
        internal static string GitFastForward {
            get {
                return ResourceManager.GetString("GitFastForward", resourceCulture);
            }
        }
        
        internal static string GitPushCompleted {
            get {
                return ResourceManager.GetString("GitPushCompleted", resourceCulture);
            }
        }
        
        internal static string GitLocalIsAheadNotice {
            get {
                return ResourceManager.GetString("GitLocalIsAheadNotice", resourceCulture);
            }
        }
        
        internal static string GitNoLocalChanges {
            get {
                return ResourceManager.GetString("GitNoLocalChanges", resourceCulture);
            }
        }
        
        internal static string GitFoundNotTrackedFiles {
            get {
                return ResourceManager.GetString("GitFoundNotTrackedFiles", resourceCulture);
            }
        }
        
        internal static string GitLocalChangesCommited {
            get {
                return ResourceManager.GetString("GitLocalChangesCommited", resourceCulture);
            }
        }
        
        internal static string GitFoundNLocalChangesToCommit {
            get {
                return ResourceManager.GetString("GitFoundNLocalChangesToCommit", resourceCulture);
            }
        }
        
        internal static string FileIsUnknown {
            get {
                return ResourceManager.GetString("FileIsUnknown", resourceCulture);
            }
        }
        
        internal static string CorruptedFileNotice {
            get {
                return ResourceManager.GetString("CorruptedFileNotice", resourceCulture);
            }
        }
    }
}
